{"version":3,"sources":["constants/productConstants.js","constants/cartConstance.js","constants/userConstants.js","constants/orderConstance.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/userReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceorderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","listProductsDetails","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","rating1","setRating1","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","description","countInStock","ListGroup","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","conformPassword","setConformPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver2","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6870eb9.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {\r\n    productListReducers,\r\n    productDetailsReducers,\r\n    productDeleteReducers,\r\n    productCreateReducers,\r\n    productUpdateReducers,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsSReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderlListMyReducer,\r\n    orderlListReducer,\r\n    orderDeliverReducer\r\n} from \"./reducers/orderReducers\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducers,\r\n    productDetails: productDetailsReducers,\r\n    productDelete: productDeleteReducers,\r\n    productCreate: productCreateReducers,\r\n    productUpdate: productUpdateReducers,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderlListMyReducer,\r\n    orderList: orderlListReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsSReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderDeliver: orderDeliverReducer\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAdressInfoFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAdressInfoFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_SUCCESS,\r\n\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducers = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: []}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducers = (state = {product: {reviews: []}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading: false, success: true, product: action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducers = (state = {product: {}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading: false, success: true, product: action.payload}\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading: true, products: []}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading: false, products: action.payload}\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS} from \"../constants/cartConstance\";\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map( x => x.product === existItem.product ? item : x)\r\n                }\r\n            }else {\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_MY_SUCCESS,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_SUCCESS\r\n} from \"../constants/orderConstance\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderlListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {orders: []}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderlListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n\r\n    USER_LOGOUT\r\n} from \"../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsSReducer = (state = {user: {}}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user: {}}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = {users: []}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LIST_RESET:\r\n            return {users: []}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_UPDATE_RESET:\r\n            return {user: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst SearchBox = () => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n\r\n    USER_LOGOUT, USER_UPDATE_FAIL\r\n} from \"../constants/userConstants\";\r\n\r\nimport {ORDER_LIST_MY_RESET} from \"../constants/orderConstance\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {'username': email, 'password': password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {'name': name, 'email': email, 'password': password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () =>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand href=\"/\">ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox/>\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                      <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                            color={'#f8e825'}\r\n                        />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/products/create/',\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: \"auto\",\r\n                display: \"block\"\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n\r\n","import React from 'react';\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages, page, keyword = '', isAdmin = false}) => {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin ?\r\n                                `/?keyword=${keyword}&page=${x + 1}`\r\n                                : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {listTopProducts} from \"../actions/productActions\";\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {error, loading, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        loading ? <Loader/>\r\n            : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {\r\n                        products.map((product) => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid/>\r\n                                    <Carousel.Caption className='carousel.caption'>\r\n                                        <h4>{product.name} (${product.price})</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            )\r\n    );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, {useEffect} from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport Product from '../components/Product'\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            <h1>Latest Products</h1>\r\n            {loading ?\r\n                <Loader/>\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {\r\n                                products.map((product) => {\r\n                                    return (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product}/>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {listProductsDetails, createProductReview} from \"../actions/productActions\";\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from \"../constants/productConstants\";\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ProductScreen = ({match, history}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating1, setRating1] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview\r\n    } = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating1(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n\r\n        }\r\n        dispatch(listProductsDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,\r\n            {\r\n                rating: rating1,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    if (error) {\r\n        return <Message variant='danger'>{error}</Message>\r\n    }\r\n\r\n    const {image, name, rating, numReviews, price, description, countInStock} = product;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {\r\n                loading ?\r\n                    <Loader/>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={image} alt={name} fluid/>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>{name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating\r\n                                                value={rating}\r\n                                                text={`${numReviews} ratings`}\r\n                                                color={'#f8e825'}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={\r\n                                                                    (e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()]\r\n                                                                        .map((x) => (\r\n                                                                            <option key={x + 1} value={x + 1}>\r\n                                                                                {x + 1}\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"btn-block\"\r\n                                                    type='button'\r\n                                                    disabled={countInStock == 0}\r\n                                                >\r\n                                                    Add to cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='mt-2'>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'/>\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader/>}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating1}\r\n                                                            onChange={(e) => setRating1(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"\">Select...</option>\r\n                                                            <option value=\"1\">1 - Poor</option>\r\n                                                            <option value=\"2\">2 - Fair</option>\r\n                                                            <option value=\"3\">3 - Good</option>\r\n                                                            <option value=\"4\">4 - Very good</option>\r\n                                                            <option value=\"5\">5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        >\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>\r\n                                                    Please <Link to='/login'>login</Link> to write a review.\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from \"axios\";\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from \"../constants/cartConstance\";\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch, getState) =>{\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async(dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async(dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1> Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={\r\n                                                (e) => dispatch(addToCart(\r\n                                                    item.product,\r\n                                                    Number(e.target.value)\r\n                                                ))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()]\r\n                                                    .map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {login} from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                        Email Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Register\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {register} from \"../actions/userActions\"\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [conformPassword, setConformPassword] = useState('')\r\n    const [message, setMessage] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password != conformPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                        Email Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"passwordConfirm\">\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={conformPassword}\r\n                        onChange={(e) => setConformPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                    Sign In\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\nexport default RegisterScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {getUserDetails, updateUserProfile} from \"../actions/userActions\"\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\nimport {listMyOrders} from \"../actions/orderActions\";\r\n\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    const [name, setName] = useState()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [conformPassword, setConformPassword] = useState('')\r\n    const [message, setMessage] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading: loadingOrders, error: errorOrders, orders} = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != conformPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"passwordConfirm\">\r\n                        <Form.Label>\r\n                            Confirm Password\r\n                        </Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={conformPassword}\r\n                            onChange={(e) => setConformPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table=sm'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}}/>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' >Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_SUCCESS\r\n} from \"../constants/orderConstance\";\r\n\r\nimport {CART_CLEAR_ITEMS} from \"../constants/cartConstance\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/orders/myorders/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/orders/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Nav} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                { step1 ? <LinkContainer to='/login'>\r\n                    <Nav.Link>Login</Nav.Link>\r\n                </LinkContainer> : (\r\n                     <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step2 ? <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                </LinkContainer> : (\r\n                     <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step3 ? <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                </LinkContainer> : (\r\n                     <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step4 ? <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                </LinkContainer> : (\r\n                     <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>\r\n                        Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>\r\n                        City\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>\r\n                        City\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>\r\n                        Country\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\n\r\nconst PaymentScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value) }\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstance\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = ((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n            //console.log(order._id)\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice\r\n            }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message> }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderActions\";\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../constants/orderConstance\";\r\n\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver2, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVMWwXQbgObWQ96cjKpPXm7htrhrV4sTIS6Vj6vlarEZ-qlNzm0chbay8NxEmrPgLLEB-Suas3TawdcC'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader/>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Message variant='danger'> {error}</Message>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: {order.user.name}</strong></p>\r\n                            <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {'   '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    {!sdkReady ? (\r\n                                        <Loader/>\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n\r\n                        {loadingDeliver2 && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {listUsers, deleteUser} from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are ypu sure ypu want to delete this user?')){\r\n              dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n\r\n                        <Table striped hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{color: 'green'}}/>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'/>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm'\r\n                                                onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'/>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, {useState, useEffect} from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport {deleteProduct, createProduct} from \"../actions/productActions\";\r\nimport {PRODUCT_CREATE_RESET} from \"../constants/productConstants\";\r\n\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword  = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are ypu sure ypu want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'/> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Table striped hover responsive className='table-sm'>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'/>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm'\r\n                                                    onClick={() => deleteHandler(product._id)}>\r\n                                                <i className='fas fa-trash'/>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {listProductsDetails, updateProduct} from \"../actions/productActions\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, {useState, useEffect} from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {listOrders} from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n\r\n                        <Table striped hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>Total</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import {HashRouter as Router, Route} from 'react-router-dom'\nimport {Container} from 'react-bootstrap'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceorderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Header/>\n            <main className=\"py-3\">\n                <Container>\n                    <Route path='/' component={HomeScreen} exact/>\n                    <Route path='/login' component={LoginScreen}/>\n                    <Route path='/register' component={RegisterScreen}/>\n                    <Route path='/profile' component={ProfileScreen}/>\n                    <Route path='/shipping' component={ShippingScreen}/>\n                    <Route path='/payment' component={PaymentScreen}/>\n                    <Route path='/placeorder' component={PlaceOrderScreen}/>\n                    <Route path='/order/:id' component={OrderScreen}/>\n                    <Route path='/product/:id' component={ProductScreen}/>\n                    <Route path='/cart/:id?' component={CartScreen}/>\n\n                    <Route path='/admin/userlist' component={UserListScreen}/>\n                    <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n\n                    <Route path='/admin/productlist' component={ProductListScreen}/>\n                    <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n\n                     <Route path='/admin/orderlist' component={OrderListScreen}/>\n                </Container>\n            </main>\n            <Footer/>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}